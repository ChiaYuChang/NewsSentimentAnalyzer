function insertSelectElement(where, name, classes, opts) {
    let newSelect = document.createElement("select");
    newSelect.name = name
    newSelect.classList = classes
    opts.forEach(o => {
        newOpt = document.createElement("option")
        newOpt.value = o.value;
        newOpt.textContent = o.txt;
        newSelect.appendChild(newOpt);
    });
    where.appendChild(newSelect);
}

function deleteSelectElement(where) {
    let lastChild = where.lastElementChild;
    if (lastChild) {
        where.removeChild(lastChild);
    }
}

function addListenerToBtn(iPosId, iBtnId, dBtnId, maxDiv, opts, alertMsg) {
    const position = document.getElementById(iPosId);
    if (!!position) {
        const insertButton = document.getElementById(iBtnId);
        const deleteButton = document.getElementById(dBtnId);
        const divLimit = maxDiv;
        let counter = 0;
        
        insertSelectElement(position, `${iPosId}[${counter}]`, "form-input", opts);
        counter++;

        insertButton.addEventListener("click", function () {
            if (counter < divLimit) {
                insertSelectElement(position, `${iPosId}[${counter}]`, "form-input", opts);
                counter++;
            } else {
                alert(alertMsg);
            }
        });

        deleteButton.addEventListener("click", function () {
            if ( counter > 1 ) {
                deleteSelectElement(position)
                counter--;
            }
        });
    }
}

document.addEventListener("DOMContentLoaded", function () {
        {{range .}}
    let {{.PositionId}}Opts = [
        {{$optMap := .OptMap}}
        { value: "{{.DefaultValue}}", txt: "{{.DefaultText}}"},
        {{range $key := .SortedOptKey}}
        { value: "{{$key}}", txt: "{{index $optMap $key}}" },{{end}}
    ];
    addListenerToBtn("{{.PositionId}}", "{{.InsertButtonId}}", "{{.DeleteButtonId}}", {{.MaxDiv}}, {{.PositionId}}Opts, "{{.AlertMessage}}");
{{end}}
})