// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: proto/language_detect.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LanguageDetectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string          `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Text           string          `protobuf:"bytes,2,opt,name=Text,proto3" json:"Text,omitempty"`
	LanguageOption *LanguageOption `protobuf:"bytes,3,opt,name=LanguageOption,proto3,oneof" json:"LanguageOption,omitempty"`
	Threshold      *float64        `protobuf:"fixed64,4,opt,name=Threshold,proto3,oneof" json:"Threshold,omitempty"`
}

func (x *LanguageDetectRequest) Reset() {
	*x = LanguageDetectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_language_detect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageDetectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageDetectRequest) ProtoMessage() {}

func (x *LanguageDetectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_language_detect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageDetectRequest.ProtoReflect.Descriptor instead.
func (*LanguageDetectRequest) Descriptor() ([]byte, []int) {
	return file_proto_language_detect_proto_rawDescGZIP(), []int{0}
}

func (x *LanguageDetectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LanguageDetectRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LanguageDetectRequest) GetLanguageOption() *LanguageOption {
	if x != nil {
		return x.LanguageOption
	}
	return nil
}

func (x *LanguageDetectRequest) GetThreshold() float64 {
	if x != nil && x.Threshold != nil {
		return *x.Threshold
	}
	return 0
}

type LanguageOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageOpt []int64 `protobuf:"varint,1,rep,packed,name=LanguageOpt,proto3" json:"LanguageOpt,omitempty"`
}

func (x *LanguageOption) Reset() {
	*x = LanguageOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_language_detect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageOption) ProtoMessage() {}

func (x *LanguageOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_language_detect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageOption.ProtoReflect.Descriptor instead.
func (*LanguageOption) Descriptor() ([]byte, []int) {
	return file_proto_language_detect_proto_rawDescGZIP(), []int{1}
}

func (x *LanguageOption) GetLanguageOpt() []int64 {
	if x != nil {
		return x.LanguageOpt
	}
	return nil
}

type LanguageDetectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string             `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Language        int64              `protobuf:"varint,2,opt,name=Language,proto3" json:"Language,omitempty"`
	Probability     float64            `protobuf:"fixed64,3,opt,name=Probability,proto3" json:"Probability,omitempty"`
	ConfidenceValue []*ConfidenceValue `protobuf:"bytes,4,rep,name=ConfidenceValue,proto3" json:"ConfidenceValue,omitempty"`
	Error           *Error             `protobuf:"bytes,5,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *LanguageDetectResponse) Reset() {
	*x = LanguageDetectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_language_detect_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageDetectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageDetectResponse) ProtoMessage() {}

func (x *LanguageDetectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_language_detect_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageDetectResponse.ProtoReflect.Descriptor instead.
func (*LanguageDetectResponse) Descriptor() ([]byte, []int) {
	return file_proto_language_detect_proto_rawDescGZIP(), []int{2}
}

func (x *LanguageDetectResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LanguageDetectResponse) GetLanguage() int64 {
	if x != nil {
		return x.Language
	}
	return 0
}

func (x *LanguageDetectResponse) GetProbability() float64 {
	if x != nil {
		return x.Probability
	}
	return 0
}

func (x *LanguageDetectResponse) GetConfidenceValue() []*ConfidenceValue {
	if x != nil {
		return x.ConfidenceValue
	}
	return nil
}

func (x *LanguageDetectResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Details []string `protobuf:"bytes,3,rep,name=Details,proto3" json:"Details,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_language_detect_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_language_detect_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_proto_language_detect_proto_rawDescGZIP(), []int{3}
}

func (x *Error) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

type ConfidenceValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string  `protobuf:"bytes,1,opt,name=Language,proto3" json:"Language,omitempty"`
	Value    float64 `protobuf:"fixed64,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ConfidenceValue) Reset() {
	*x = ConfidenceValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_language_detect_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfidenceValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfidenceValue) ProtoMessage() {}

func (x *ConfidenceValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_language_detect_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfidenceValue.ProtoReflect.Descriptor instead.
func (*ConfidenceValue) Descriptor() ([]byte, []int) {
	return file_proto_language_detect_proto_rawDescGZIP(), []int{4}
}

func (x *ConfidenceValue) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ConfidenceValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PingPong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal bool `protobuf:"varint,1,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (x *PingPong) Reset() {
	*x = PingPong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_language_detect_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingPong) ProtoMessage() {}

func (x *PingPong) ProtoReflect() protoreflect.Message {
	mi := &file_proto_language_detect_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingPong.ProtoReflect.Descriptor instead.
func (*PingPong) Descriptor() ([]byte, []int) {
	return file_proto_language_detect_proto_rawDescGZIP(), []int{5}
}

func (x *PingPong) GetSignal() bool {
	if x != nil {
		return x.Signal
	}
	return false
}

var File_proto_language_detect_proto protoreflect.FileDescriptor

var file_proto_language_detect_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x22, 0xcd,
	0x01, 0x0a, 0x15, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x4c, 0x0a, 0x0e,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52,
	0x09, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x32,
	0x0a, 0x0e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x22, 0xef, 0x01, 0x0a, 0x16, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x4f, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x43, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x08, 0x50, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x32, 0xbe,
	0x01, 0x0a, 0x10, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x65, 0x0a, 0x0e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x0b, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x19, 0x2e, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x6e, 0x67, 0x1a, 0x19, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x42,
	0x1e, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x68,
	0x69, 0x61, 0x59, 0x75, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_language_detect_proto_rawDescOnce sync.Once
	file_proto_language_detect_proto_rawDescData = file_proto_language_detect_proto_rawDesc
)

func file_proto_language_detect_proto_rawDescGZIP() []byte {
	file_proto_language_detect_proto_rawDescOnce.Do(func() {
		file_proto_language_detect_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_language_detect_proto_rawDescData)
	})
	return file_proto_language_detect_proto_rawDescData
}

var file_proto_language_detect_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_language_detect_proto_goTypes = []interface{}{
	(*LanguageDetectRequest)(nil),  // 0: language_detect.LanguageDetectRequest
	(*LanguageOption)(nil),         // 1: language_detect.LanguageOption
	(*LanguageDetectResponse)(nil), // 2: language_detect.LanguageDetectResponse
	(*Error)(nil),                  // 3: language_detect.Error
	(*ConfidenceValue)(nil),        // 4: language_detect.ConfidenceValue
	(*PingPong)(nil),               // 5: language_detect.PingPong
}
var file_proto_language_detect_proto_depIdxs = []int32{
	1, // 0: language_detect.LanguageDetectRequest.LanguageOption:type_name -> language_detect.LanguageOption
	4, // 1: language_detect.LanguageDetectResponse.ConfidenceValue:type_name -> language_detect.ConfidenceValue
	3, // 2: language_detect.LanguageDetectResponse.error:type_name -> language_detect.Error
	0, // 3: language_detect.LanguageDetector.DetectLanguage:input_type -> language_detect.LanguageDetectRequest
	5, // 4: language_detect.LanguageDetector.HealthCheck:input_type -> language_detect.PingPong
	2, // 5: language_detect.LanguageDetector.DetectLanguage:output_type -> language_detect.LanguageDetectResponse
	5, // 6: language_detect.LanguageDetector.HealthCheck:output_type -> language_detect.PingPong
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_language_detect_proto_init() }
func file_proto_language_detect_proto_init() {
	if File_proto_language_detect_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_language_detect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LanguageDetectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_language_detect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LanguageOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_language_detect_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LanguageDetectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_language_detect_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_language_detect_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfidenceValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_language_detect_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingPong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_language_detect_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_proto_language_detect_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_language_detect_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_language_detect_proto_goTypes,
		DependencyIndexes: file_proto_language_detect_proto_depIdxs,
		MessageInfos:      file_proto_language_detect_proto_msgTypes,
	}.Build()
	File_proto_language_detect_proto = out.File
	file_proto_language_detect_proto_rawDesc = nil
	file_proto_language_detect_proto_goTypes = nil
	file_proto_language_detect_proto_depIdxs = nil
}
