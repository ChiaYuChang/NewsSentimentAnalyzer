// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package model

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CleanUpAPIKey(ctx context.Context) error
	CleanUpAPIs(ctx context.Context) error
	CleanUpJobs(ctx context.Context) error
	CleanUpKeywords(ctx context.Context) error
	CleanUpUsers(ctx context.Context) error
	CreateAPI(ctx context.Context, arg *CreateAPIParams) error
	CreateAPIKey(ctx context.Context, arg *CreateAPIKeyParams) error
	CreateJob(ctx context.Context, arg *CreateJobParams) error
	CreateKeyword(ctx context.Context, arg *CreateKeywordParams) error
	CreateLog(ctx context.Context, arg *CreateLogParams) error
	CreateNews(ctx context.Context, arg *CreateNewsParams) error
	CreateUser(ctx context.Context, arg *CreateUserParams) error
	DeleteAPI(ctx context.Context, id int16) error
	DeleteAPIKey(ctx context.Context, arg *DeleteAPIKeyParams) error
	DeleteJob(ctx context.Context, arg *DeleteJobParams) error
	DeleteKeyword(ctx context.Context, keyword string) error
	DeleteKeywordByNewsId(ctx context.Context, newsID int64) error
	DeleteNewsById(ctx context.Context, id int64) error
	DeleteNewsPublishBefore(ctx context.Context, beforeTime pgtype.Timestamptz) error
	DeleteUser(ctx context.Context, id int32) error
	GetAPIKey(ctx context.Context, arg *GetAPIKeyParams) ([]*GetAPIKeyRow, error)
	GetJobsByOwner(ctx context.Context, arg *GetJobsByOwnerParams) ([]*GetJobsByOwnerRow, error)
	GetKeywordsByNewsId(ctx context.Context, newsID []int32) ([]string, error)
	GetLogByUserId(ctx context.Context, arg *GetLogByUserIdParams) ([]*Log, error)
	GetLogByUserIdNext(ctx context.Context, arg *GetLogByUserIdNextParams) ([]*Log, error)
	GetNewsByJob(ctx context.Context) ([]*GetNewsByJobRow, error)
	GetNewsByKeywords(ctx context.Context, keywords []string) ([]*GetNewsByKeywordsRow, error)
	GetNewsByMD5Hash(ctx context.Context, md5Hash string) (*GetNewsByMD5HashRow, error)
	GetNewsPublishBetween(ctx context.Context, arg *GetNewsPublishBetweenParams) ([]*GetNewsPublishBetweenRow, error)
	GetUserAuth(ctx context.Context, email string) (*GetUserAuthRow, error)
	ListAPI(ctx context.Context, n int32) ([]*ListAPIRow, error)
	ListAPIKey(ctx context.Context, owner int32) ([]*ListAPIKeyRow, error)
	ListRecentNNews(ctx context.Context, n int32) ([]*ListRecentNNewsRow, error)
	UpdateAPI(ctx context.Context, arg *UpdateAPIParams) error
	UpdateAPIKey(ctx context.Context, arg *UpdateAPIKeyParams) error
	UpdateJobStatus(ctx context.Context, arg *UpdateJobStatusParams) error
	UpdatePassword(ctx context.Context, arg *UpdatePasswordParams) error
}

var _ Querier = (*Queries)(nil)
